---
export type Props = {
  headings: Array<{ depth: number; text: string; slug: string }>;
};

const { headings } = Astro.props;
const tocHeadings = (function () {
  if (headings[0].depth === 1) {
    headings.shift();
  }
  return headings;
})();
---

<aside>
  <ul>
    {
      tocHeadings.map((h) => {
        return (
          <li style={{ "--depth": h.depth - 2 }}>
            {" "}
            <a href={`#${h.slug}`}>{h.text}</a>
          </li>
        );
      })
    }
  </ul>
</aside>

<style>
  aside {
    position: fixed;
    top: 0;
    right: 1rem;
    max-width: 30ch;
  }
  li {
    margin-inline-start: var(--space-xs);
    padding-inline-start: calc(var(--space-xs) * var(--depth));

    overflow-x: hidden;
    /* font-size: var(--step--1); */
    text-overflow: ellipsis;
    white-space: nowrap;
    + li {
      padding-block-end: var(--space-3xs);
    }
    &:not([style="--depth:0"]) {
      border-left-width: 1px;
      border-left-color: var(--text-muted);
      border-left-style: dashed;
    }
  }
  a {
  }
</style>
