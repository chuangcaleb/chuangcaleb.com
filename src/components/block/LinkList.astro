---
import { type HTMLAttributes } from "astro/types";
import type { NavigationLink } from "~/data/links";
import TagWIcon from "../styled/polym/TagWIcon.astro";

interface Props extends HTMLAttributes<"ul"> {
  links: NavigationLink[];
  variant?: "footer" | "header";
}

const { links = [], variant, ...props } = Astro.props;
---

<div data-variant={variant}>
  <ul {...props}>
    {
      links.map((l) => (
        <li>
          <TagWIcon
            as="a"
            href={l.href}
            iconName={l.icon}
            iconColor="unset"
            {...(l.href === Astro.url.pathname && { "aria-current": "page" })}
          >
            {variant === "header" ? (l.shortLabel ?? l.label) : l.label}
          </TagWIcon>
        </li>
      ))
    }
  </ul>
</div>

<style>
  a {
    --color: var(--text-faded);
  }
  li:first-child a {
    font-family: var(--font-heading-serif);
    font-size: var(--step-1);
  }
  [data-variant="header"] li:first-child {
    a {
      --color: var(--text-normal);
    }
    &::after {
      content: "â€¢";
      color: var(--text-faded);
      margin-inline-start: var(--space-xs);
    }
  }
  [data-variant="footer"] {
    container-type: inline-size;
    @container (min-width: 500px) {
      ul {
        display: flex;
        flex-wrap: wrap;
        align-items: baseline;
      }
      li {
        --flow-space: 0;
        display: inline-flex;
        font-size: var(--step-0);
        margin-inline-end: var(--space-m);
        &:first-child {
          margin-inline-end: var(--space-xl);
          a {
            font-size: var(--step-2);
          }
        }
      }
    }
  }
</style>
