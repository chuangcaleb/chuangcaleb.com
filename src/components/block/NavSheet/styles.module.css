.FloatingButton {
  position: fixed;
}

.CloseButton {
  --flow-space: 0;
  position: absolute;
}

:is(.FloatingButton, .CloseButton) {
  top: var(--size-2);
  right: var(--size-2);
  width: var(--size-8);
  aspect-ratio: 1/1;
  z-index: 5;
  border-radius: var(--radius-3);
  background-color: var(--bg3);
  padding: var(--size-2);

  svg {
    display: flex;
    width: 100%;
    color: var(--text-faded);
  }
}

.FloatingUp {
  visibility: hidden;
  transition: all 0.2s;
  transform: translateY(-100%);
}
.FloatingDown {
  visibility: visible;
  transition: all 0.5s;
}

.DialogOverlay {
  position: fixed;
  inset: 0;
  z-index: 15;
  background-color: rgba(0, 0, 0, 0.5);
  animation: overlayShow 500ms cubic-bezier(0.16, 1, 0.3, 1);
}

.DialogContent {
  background-color: var(--bg2);
  position: fixed;
  top: 0;
  bottom: 0;
  right: 0;
  z-index: 50;
  padding: var(--size-5);
  border-left-width: 1px;
  width: 100%;
  max-width: var(--size-content-2);
  transition-property: background-color, border-color, color, fill, stroke,
    opacity, box-shadow, transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
  /* box-shadow:
    0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -2px rgba(0, 0, 0, 0.05); */
  overflow-y: scroll;
  &:focus {
    outline: none;
  }
  &[data-state="open"] :global {
    animation-name: enter;
    animation-duration: 0.5s;
    --tw-enter-translate-x: 100%;
  }
  &[data-state="closed"] :global {
    animation-name: exit;
    animation-duration: 0.5s;
    --tw-exit-translate-x: 100%;
  }
}

.DialogTitle {
  font-size: var(--step-2);
}

@keyframes overlayShow {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

astro-slot :global {
  display: block;
}

@keyframes enter {
  0% {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(
        var(--tw-enter-translate-x, 0),
        var(--tw-enter-translate-y, 0),
        0
      )
      scale3d(
        var(--tw-enter-scale, 1),
        var(--tw-enter-scale, 1),
        var(--tw-enter-scale, 1)
      )
      rotate(var(--tw-enter-rotate, 0));
  }
}

@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(
        var(--tw-exit-translate-x, 0),
        var(--tw-exit-translate-y, 0),
        0
      )
      scale3d(
        var(--tw-exit-scale, 1),
        var(--tw-exit-scale, 1),
        var(--tw-exit-scale, 1)
      )
      rotate(var(--tw-exit-rotate, 0));
  }
}
