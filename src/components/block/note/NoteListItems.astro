---
import type { NoteReference } from "lib/utils/types";
import NoteCardContent from "~/components/block/note/NoteCardContent.astro";
import NoteLink from "~/components/block/NoteLink.astro";
import Card from "~/components/styled/monom/note/Card.astro";
import NoteLi from "~/components/styled/monom/note/NoteLi.astro";
import { getNoteEntries } from "~/utils/note";

interface Props {
  references: NoteReference[];
  variant?: "simple" | "inline" | "card";
}

const { references, variant = "card" } = Astro.props;

const notes = await getNoteEntries(references);
---

{
  notes.map((note) => {
    if (!note) return null;
    const isRouteMatch = note.route === Astro.url.pathname;
    if (isRouteMatch) {
      return (
        <li>
          <b>{note.name}</b>
        </li>
      );
    }
    return (
      <li>
        {variant === "card" && (
          <Card as="a" href={note.route} aria-label={note.name}>
            <NoteCardContent note={note} />
          </Card>
        )}
        {variant === "inline" && (
          <NoteLi as="a" href={note.route}>
            <NoteCardContent note={note} />
          </NoteLi>
        )}
        {variant === "simple" && <NoteLink note={note} />}
      </li>
    );
  })
}
