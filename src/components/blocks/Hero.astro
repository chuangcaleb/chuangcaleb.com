---
import heroImg from "~/assets/hero.jpeg";
import Button from "~/components/primitives/Button.astro";
import HeadingCaps from "~/components/styled/polym/Caps.astro";
import LINKS from "~/data/links";
import { Icon } from "astro-iconify";
import { Image } from "astro:assets";

const { LINKEDIN, GITHUB, CV } = LINKS;
const heroLinks = [GITHUB, LINKEDIN, CV];
---

<section class="hero-section flow-lg">
  <header>
    <HeadingCaps as="h1">Chuang Caleb</HeadingCaps>
    <h2>
      Front-end Web Dev <span class="deemph">with a</span>
      <span class="gradient"> different story.</span>
    </h2>
  </header>
  <div class="subheader">
    <p>
      <b>Ahoy! ðŸŒŠ This is Caleb speaking.</b> I'm a <b>Malaysian</b> dude who
      found
      <b>Front-end Web Development</b> quite neat after <b
        >1 year+ of work experience</b
      >, especially in <b>UI Design</b> & <b>dynamic web apps</b>. Iâ€™m also
      exploring other tech & dev roles to fill any gaps in my toolbox for
      creating cool software solutions. <b>Wanna get connected?</b>
    </p>
    <div class="buttons-cont">
      <Button as="a" theme="brand" class="cta-1" href="#contact">
        <Icon name="mdi:connection" />
         Contact me!
      </Button>
      <ul class="norm buttons">
        {
          heroLinks.map((l) => (
            <li>
              <Button as="a" href={l.href} aria-label={l.ariaLabel}>
                <Icon name={l.icon} aria-hidden="true" />
              </Button>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
  <Image
    src={heroImg}
    alt="Head profile of Chuang Caleb"
    width={heroImg.width / 3}
    densities={[1, 2, 3]}
    loading="eager"
  />
</section>

<style is:global>
  .hero-section {
    display: grid;
    column-gap: var(--size-fluid-3);
    grid-template: "header" "subheader" "img";
    align-content: center;
    /* padding-top: var(--size-fluid-2); */

    header {
      display: grid;
      gap: var(--size-fluid-1);
      grid-area: header;
    }

    .subheader {
      display: grid;
      gap: var(--size-fluid-2);
      grid-area: subheader;

      p {
        max-width: var(--size-content-3);
      }
    }

    h1 {
      font-size: var(--font-size-fluid-1);
    }

    h2 {
      font-size: var(--font-size-fluid-3);
      line-height: var(--font-lineheight-0);
      max-width: 15ch;
      font-weight: var(--font-weight-8);
    }

    img {
      /* --_min-w: 55vw;
      min-width: min(var(--_min-w)); */
      grid-area: img;
      border-radius: var(--radius-2);
    }

    ul.buttons {
      display: flex;
      flex-wrap: wrap;
      gap: var(--size-fluid-1);
    }

    .cta-1 {
      flex-grow: 1;
      max-width: var(--size-content-1);
    }

    .buttons-cont {
      display: flex;
      flex-wrap: wrap;
      column-gap: var(--size-fluid-2);
      row-gap: var(--size-fluid-2);
    }

    /* ost{
      img {
        margin-inline: auto;
      }
    }
    @media screen and (500px <= width < 860px) {
      & {
        grid-template: "header header" "img subheader";
        grid-template-columns: min-content 1fr;
      }
      img {
        --_min-w: min(35vw, 180px);
      }
      .subheader {
        margin-bottom: 0;
      }
    }
    @media screen and (width >= 860px) {
      & {
        grid-template: "header img" "subheader img";
      }
      img {
        --_min-w: 100%;
      }
    } */

    .gradient {
      background: linear-gradient(to bottom right, var(--text-1), var(--brand));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }
    .deemph {
      font-weight: initial;
    }
  }
</style>
