---
import heroImg from "~/assets/hero.jpeg";
import Button from "~/components/primitive/Button.astro";
import HeadingCaps from "~/components/styled/polym/Caps.astro";
import LINKS from "~/data/links";
import { Icon } from "astro-iconify";
import { Image } from "astro:assets";

const { LINKEDIN, GITHUB, CV } = LINKS;
const heroLinks = [GITHUB, LINKEDIN, CV];

const props = Astro.props;
---

<section class="max region" {...props}>
  <div class="container">
    <Image
      src={heroImg}
      alt="Head profile of Chuang Caleb"
      width={heroImg.width / 3}
      densities={[1, 2, 3]}
      loading="eager"
    />
    <div class="text-cont | flow-lg">
      <h1>
        software dev <br />
        <span class="deemph">with a</span>
        <span class="gradient"> different story.</span>
      </h1>
      <p>
        Ahoy! ðŸŒŠ This is Caleb speaking. I professionally tinker with <b>
          UI design systems
        </b> & <b>dynamic web apps</b> â€” and unprofessionally with <b>
          narrative storytelling</b
        >.
      </p>
      <p>You'll find out about me on this site. Wanna work together?</p>
    </div>
  </div>
</section>

<style lang="scss">
  section {
    $width-max: 1400px;
    $gutter-max: 8rem;

    $gutter: minmax(0, $gutter-max);
    $col-center-w: min($width-max - $gutter-max * 2, 100%);

    max-width: $width-max;
    margin-inline: auto;
    min-height: min(90vh, 120ch);
    display: grid;
    grid-template-columns: $gutter $col-center-w $gutter;
  }

  .container {
    display: grid;
    grid-column: 2 / 2;
    grid-template-columns: 7fr 2.5fr 3.5fr;
    grid-template-rows: repeat(6, 1fr);
    position: relative;
  }

  .text-cont {
    display: grid;
    grid-column: 1 / -2;
    grid-row: 3 / 7;
    grid-template-columns: subgrid;
    grid-template-rows: auto;
    align-content: start;

    h1 {
      grid-column: 1 / -1;
      // hyphens: none;
      line-height: var(--step-7);
    }
    p {
      grid-column: 1 / -2;
      text-wrap: balance;
      padding-inline-end: var(--space-m);
      font-size: var(--step-1);
    }
  }
  img {
    grid-column: -3 / -1;
    grid-row: 1 / 5;
    width: 100%;
    justify-self: end;
    filter: saturate(0.6);
    z-index: -1;
  }

  /* .gradient {
    background: linear-gradient(to bottom right, var(--text-1), var(--brand));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    &::selection {
      -webkit-background-clip: initial;
      -webkit-text-fill-color: initial;
    }
  }
  .deemph {
    font-weight: initial;
  } */
</style>
