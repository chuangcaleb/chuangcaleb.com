---
import type { HTMLAttributes } from "astro/types";
import { cn } from "@utils/ui";

export interface ButtonProps extends HTMLAttributes<"button"> {
  theme?: "brand";
  size?: "icon";
}

type Props = ButtonProps;

let { class: className, theme, size, ...props } = Astro.props;

className = cn(className, theme, size);
---

<button class={className} {...props}>
  <slot />
</button>

<style>
  button {
    background-color: var(--_bg, var(--surface-1b));
    color: var(--_text, var(--text-1));

    display: inline-flex;
    gap: var(--size-1);
    align-items: center;
    padding: var(--size-2) var(--size-3);
    font-weight: var(--font-weight-7);
    border-radius: var(--radius-2);

    &:hover {
      background-color: var(--_bg-hover, var(--text-1));
      color: var(--_text-hover, var(--brand));
    }

    &.brand {
      --_bg: var(--brand);
      --_text: var(--text-on-brand);
      /* --_bg-hover: var(--text-1);
      --_text-hover: var(--brand); */
    }

    &.icon,
    &:has(svg:first-child:last-child) {
      padding: var(--size-1);
    }
    &:has(svg:not(:first-child:last-child)) {
      padding: var(--size-1) var(--size-2);
    }
  }
</style>
