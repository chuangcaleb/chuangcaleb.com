---
import { type HTMLTag, type Polymorphic } from "astro/types";

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
  theme?: "brand";
};

const { as: Comp = "button", theme, class: className, ...props } = Astro.props;
---

<Comp class:list={["cc-btn", theme, className]} {...props}>
  <slot />
</Comp>

<style is:global>
  .cc-btn {
    background-color: var(--_bg, var(--surface-1b));
    color: var(--_text, var(--text-1-strong));
    border-color: var(--_border, var(--border));
    border-width: var(--_border-width, 1px);

    display: inline-flex;
    gap: var(--size-relative-3);
    align-items: center;
    justify-content: center;
    padding: var(--size-relative-2) var(--size-relative-3);
    border-style: solid;
    border-radius: var(--radius-2);

    font-weight: var(--font-weight-7);
    text-decoration-line: none;
    text-transform: lowercase;

    &.brand {
      --_bg: var(--brand);
      --_text: var(--text-on-brand);
      --_border: transparent;
      --_text-hover: var(--brand);
    }

    /* &:has(svg:first-child:last-child) {
      padding: var(--size-1);
    }
    &:has(svg:not(:first-child:last-child)) {
      padding: var(--size-1) var(--size-2);
    } */
    &:is(a) {
      margin: 0;
    }

    &:is(:focus, :active) {
      transform: scale(0.95);
    }

    &:is(:hover, :focus, :active) {
      --_bg: var(--_bg-hover);
      --_text: var(--_text-hover, var(--brand));
      html[data-theme="dark"] & {
        --_bg-hover: var(--text-1-strong);
        --_border: transparent;
      }
      html[data-theme="light"] & {
        --_bg-hover: var(--text-on-brand);
        --_border: var(--brand);
      }
    }

    svg {
      width: 1.5em;
    }
  }
</style>
