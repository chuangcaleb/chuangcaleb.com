---
import { type HTMLAttributes } from "astro/types";
import type { NoteReference } from "lib/utils/types";
import Card from "~/components/styled/monom/note/Card.astro";
import { getNoteEntries } from "~/utils/note";
import NoteLink from "../block/NoteLink.astro";
import NoteCardContent from "~/components/block/note/NoteCardContent.astro";

interface Props extends HTMLAttributes<"ul"> {
  isOrdered?: boolean;
  items: NoteReference[];
  variant?: "card";
}

const {
  isOrdered = false,
  items,
  class: propsClass,
  variant,
  ...rest
} = Astro.props;

const ListHTMLElement = isOrdered ? "ol" : "ul";
const notes = await getNoteEntries(items);
---

{
  notes && (
    <ListHTMLElement
      {...rest}
      class:list={[variant && `variant-${variant}`, propsClass]}
    >
      {notes.map((note, index) => {
        if (!note) return null;
        return (
          <li>
            {variant === "card" && (
              <Card as="a" href={note.route}>
                <NoteCardContent note={note} />
              </Card>
            )}
            {variant !== "card" && <NoteLink note={note} />}
          </li>
        );
      })}
    </ListHTMLElement>
  )
}

<style>
  .variant-card {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(min(100%, 35ch), 1fr));
    grid-auto-rows: 1fr;
    column-gap: var(--space-m);
    row-gap: var(--space-s);
  }
</style>
