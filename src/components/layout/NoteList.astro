---
import { type HTMLAttributes } from "astro/types";
import type { ContentEntryMap, ValidContentEntrySlug } from "astro:content";
import { getEntries } from "astro:content";
import NoteCard from "~/components/styled/monom/note/NoteCard.astro";
import { getNoteName, gnr } from "~/utils/post";

interface Props<C extends keyof ContentEntryMap> extends HTMLAttributes<"ul"> {
  isOrdered?: boolean;
  items: {
    collection: C;
    slug: ValidContentEntrySlug<C>;
  }[];
}

const { isOrdered = false, items, class: propsClass, ...rest } = Astro.props;

const ListHTMLElement = isOrdered ? "ol" : "ul";
const notes = await getEntries(items);
---

{
  notes && (

      <ListHTMLElement {...rest} class:list={["list flow-li-0", propsClass]}>
        {notes.map((note, index) => {
          if (!note) return null;
          return (
            <li>
              <NoteCard as="a" href={gnr(note.slug)}>
                <h3>
                  {isOrdered && `#${index + 1}: `}
                  {getNoteName(note.id)}
                </h3>
                <div class="metadata">ùë• months ago</div>
              </NoteCard>
            </li>
          );
        })}
      </ListHTMLElement>
  )
}

<style>
  .list {
    display: grid;
    grid-template-columns: repeat(
      auto-fit,
      minmax(min(100%, 35ch), 1fr)
    );
    column-gap: var(--space-l);
    row-gap: var(--space-s);
  }
</style>
