---
import type { ContentEntryMap, ValidContentEntrySlug } from "astro:content";
import { getEntries } from "astro:content";
import NoteCard from "~/components/styled/monom/note/NoteCard.astro";
import { getNoteName, gnr } from "~/utils/post";

interface Props<C extends keyof ContentEntryMap> {
  isOrdered: boolean;
  items: {
    collection: C;
    slug: ValidContentEntrySlug<C>;
  }[];
}

const { isOrdered, items } = Astro.props;

const ListHTMLElement = isOrdered ? "ol" : "ul";
const notes = await getEntries(items);
---

{
  notes && (
    <Fragment>
      <hr />
      <ListHTMLElement class="flom-xl">
        {notes.map((note, index) => {
          if (!note) return null;
          return (
            <li>
              <NoteCard as="a" href={gnr(note.slug)}>
                <h3>
                  {isOrdered && `#${index + 1}: `}
                  {getNoteName(note.id)}
                </h3>
                <div class="metadata">ùë• months ago</div>
              </NoteCard>
            </li>
          );
        })}
      </ListHTMLElement>
    </Fragment>
  )
}
