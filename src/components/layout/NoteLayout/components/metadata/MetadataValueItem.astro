---
import {
  getEntry,
  type ContentEntryMap,
  type ValidContentEntrySlug,
} from "astro:content";
import AccentA from "~/components/styled/monom/AccentA.astro";
import { getNoteName } from "~/utils/post";
import type { MetadataValues } from "./MetadataValue.astro";

interface Props {
  isLink: boolean;
  value: Exclude<MetadataValues, Array<any>>;
}

interface Reference<C extends keyof ContentEntryMap> {
  collection: C;
  slug: ValidContentEntrySlug<C>;
}

const isReference = (x: any): x is Reference<"obsidian-note"> =>
  !!x["collection"] && (!!x["id"] || !!x["slug"]);

const { value } = Astro.props;

const isDate = value instanceof Date;
const note = isReference(value) && (await getEntry(value));

const isString = typeof value === "string";
const isDateFormat = isString && Date.parse(value);
---

{isDate && value.toLocaleDateString("en-gb")}
{note && <AccentA href={`/note/${note.slug}`}>{getNoteName(note.id)}</AccentA>}
{isString && isDateFormat && new Date(value).toLocaleDateString("en-gb")}
{isString && !isDateFormat && value}
