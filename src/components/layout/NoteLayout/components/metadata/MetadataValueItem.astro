---
import { getEntry } from "astro:content";
import AccentA from "~/components/styled/monom/AccentA.astro";
import { getNoteName } from "~/utils/post";
import type { MetadataValues } from "./MetadataValue.astro";
import type { Reference } from "~/utils/meta";
import {gnr} from '~/utils/post';
import { formatDisplayDate } from "~/utils/time";

interface Props {
  isLink: boolean;
  value: Exclude<MetadataValues, Array<any>>;
}

const isReference = (x: any): x is Reference<"obsidian-note"> =>
  !!x["collection"] && (!!x["id"] || !!x["slug"]);

const { value } = Astro.props;

const isDate = value instanceof Date;
const note = isReference(value) && (await getEntry(value));

const isString = typeof value === "string";
const isDateFormat = isString && Date.parse(value);
---

{isDate && formatDisplayDate(value)}
{note && <AccentA href={gnr(note.slug)}>{getNoteName(note.id)}</AccentA>}
{isString && isDateFormat && formatDisplayDate(new Date(value))}
{isString && !isDateFormat && value}
