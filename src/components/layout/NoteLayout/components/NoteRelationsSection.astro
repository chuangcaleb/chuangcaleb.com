---
import type { NoteMetadata } from "lib/utils/types";
import NoteListItems from "~/components/block/note/NoteListItems.astro";
import { getNoteEntries } from "~/utils/note";
import SeriesList from "./SeriesList.astro";

interface Props {
  metadata: NoteMetadata;
}

// (childrenNotes || !!seriesesNotes.length) && (
const { metadata } = Astro.props;
const { down: children = [], up: parents = [], series } = metadata;

const parentNotes = await getNoteEntries(parents);

const isParent = !!children?.length;
const childrenNotes = isParent && {
  isOrdered: !!series,
  items: series ?? children,
};

// parents which are also series
// type SeriesesNotes = Series[]; type Series = SeriesMember[]
const seriesesNotes = parentNotes.filter((note) => !!note.data.series);
// const regularParentsNotes = parentNotes.filter((note) => !note.data.series);
---

<div class="metadata-footer | wide region prose linew flow-lg">
  {
    childrenNotes && (
      <>
        <ul class="flow-sm">
          <NoteListItems references={childrenNotes.items} />
        </ul>
      </>
    )
  }
  {!!seriesesNotes.length && <SeriesList serieses={seriesesNotes} />}
</div>

<style>
  .metadata-footer {
    border-width: 1px;
    border-radius: var(--radius-3);
    background-color: var(--bg2);
    --flow-space: var(--space-2xl);
  }
</style>
