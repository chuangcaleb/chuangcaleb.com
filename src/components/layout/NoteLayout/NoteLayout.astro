---
import type { MarkdownHeading } from "astro";
import BaseMain from "~/components/layout/BaseMain.astro";
import NoteList from "~/components/layout/NoteList.astro";
import type { MetadataProps } from "./components/metadata/Metadata.astro";
import Metadata from "./components/metadata/Metadata.astro";
import Toc from "./components/toc/Toc.astro";

interface Props {
  title: string;
  headings?: MarkdownHeading[];
  metadata?: MetadataProps;
}

const { title, headings = [], metadata = {} } = Astro.props;

// collection
const { collectionItems, series: isOrdered = false } = metadata;
const isCollection = !!collectionItems?.length;
const collectionData = isCollection && { isOrdered, items: collectionItems };
---

<BaseMain title={title}>
  <Fragment slot="sheetBody">
    <h3>{title}</h3>
    <Metadata metadata={metadata} />
    <Toc headings={headings} />
  </Fragment>
  <article class="note-body">
    <aside class="flow-lg">
      <Metadata metadata={metadata} />
      <div class="aside-sticky flow no-scrollbar">
        <Toc headings={headings} />
      </div>
    </aside>
    <div class="article-main full cgrid prose flow-lg">
      <slot />
      {
        collectionData && (
          <Fragment>
            <hr />
            <NoteList class="feature" {...collectionData} />
          </Fragment>
        )
      }
    </div>
  </article>
</BaseMain>

<style>
  .note-body {
    display: grid;
    grid-template-columns: 1fr 26vw;
    padding-bottom: var(--space-3xl);
  }

  aside {
    padding-inline: var(--space-m);
    padding-bottom: var(--space-2xs);
  }
  .aside-sticky {
    position: sticky;
    top: var(--space-xs);
    height: min(100%, 100vh);
    width: 100%;
    overflow-x: hidden;
    padding-block-end: var(--space-l);
  }
  @media (width < 900px) {
    .note-body {
      grid-template-columns: 1fr;
    }
    aside {
      display: none;
    }
  }
  .article-main {
    grid-row-start: 1;
    grid-column: 1;

    & :global(:is(h1)) {
      grid-column-end: feature;
    }
    & :global(h1 + *) {
      --flow-space: var(--size-relative-7);
    }

    :is(h1, h2, h3, h4, h5) {
      /* max-width: initial; */
    }
    @media (width >= 1000px), (680px <= width <= 900px) {
      > :is(h1, h2, h3, h4, h5) {
        display: list-item;
      }

      h1::marker,
      h2::marker,
      h3::marker,
      h4::marker,
      h5::marker {
        color: var(--text-muted);
        font-size: 0.8em;
        font-family: var(--font-heading-serif);
        font-weight: initial;
      }
      h1::marker {
        content: "H1  ";
      }
      h2::marker {
        content: "H2  ";
      }
      h3::marker {
        content: "H3  ";
      }
      h4::marker {
        content: "H4  ";
      }
    }
  }
</style>
