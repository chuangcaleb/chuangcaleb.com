---
import { render } from "astro:content";
import type { SuperNote } from "lib/utils/types";
import FurtherResources from "~/components/block/FurtherResources.astro";
import Pill from "~/components/block/Pill.astro";
import AccentA from "~/components/styled/monom/AccentA.astro";
import { getNoteEntries } from "~/utils/note";
import Metadata from "./components/metadata/AsideMetadata.astro";
import MetadataContainer from "./components/MetadataContainer.astro";
import NoteHeader from "./components/NoteHeader.astro";
import NoteRelationsSection from "./components/NoteRelationsSection.astro";
import Toc from "./components/toc/Toc.astro";
import NoteLayout from "./NoteLayout.astro";

interface Props {
  entry: SuperNote;
}

const { entry } = Astro.props;

const { Content, headings } = await render(entry);
const metadata = entry.data;

// title
const title = `${metadata.emojip ? metadata.emojip + " " : ""} ${entry.name}`;

// parents
const parents = [...(metadata.up ?? [])];
const parentNotes = await getNoteEntries(parents);
// description
const { description } = metadata;
---

<NoteLayout title={entry.name} description={description}>
  <slot slot="header">
    <NoteHeader title={title} description={description}>
      <div class="metadata-header | content">
        <div class="parents">
          {
            !!parentNotes.length ? (
              <MetadataContainer prefix="â†‘">
                {parentNotes.map((c, index) => (
                  <>
                    {index > 0 && "â€¢"}
                    <AccentA href={c.route}>
                      {`${c.data.emojip} ${c.name}`}
                    </AccentA>
                  </>
                ))}
              </MetadataContainer>
            ) : (
              <MetadataContainer prefix="â†‘">
                <AccentA href="/garden">ðŸŒ² Garden Root</AccentA>
              </MetadataContainer>
            )
          }
        </div>
        {
          metadata.published && (
            <span class="text-faded">
              Published on <Pill key="published" value={metadata.published} />
            </span>
          )
        }
      </div>
    </NoteHeader>
  </slot>
  <Content />
  {metadata.resources && <FurtherResources resources={metadata.resources} />}
  <NoteRelationsSection metadata={metadata} />

  <Fragment slot="sheetBody">
    <h3>{title}</h3>
    <Metadata metadata={metadata} />
    <slot name="sidebar" />
    <Toc headings={headings} />
  </Fragment>
</NoteLayout>

<style>
  .metadata-header {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    gap: var(--space-xs);
  }

  .parents {
    display: flex;
    gap: var(--space-m);
  }
</style>
