---
import { render } from "astro:content";
import type { SuperNotes } from "lib/utils/types";
import AccentA from "~/components/styled/monom/AccentA.astro";
import { getNoteEntries } from "~/utils/note";
import NoteLayout from "./NoteLayout.astro";
import NoteHeader from "./components/NoteHeader.astro";
import Pill from "~/components/block/Pill.astro";

interface Props {
  entry: SuperNotes[number];
}

const { entry } = Astro.props;

const { Content, headings } = await render(entry);

// title
const cs = await getNoteEntries(entry.data.collection);
---

<NoteLayout title={entry.name} headings={headings} metadata={entry.data}>
  <slot slot="header">
    <NoteHeader title={entry.name} description={entry.data.description}>
      <div class="metadata | content">
        <div class="parents">
          {
            !!cs.length ? (
              <span>
                â†‘{" "}
                {cs.map((c) => (
                  <AccentA
                    href={c.route}
                  >{`${c.data.emojip} ${c.name}`}</AccentA>
                ))}
              </span>
            ) : (
              <span>
                â†‘ <AccentA href="/garden">ðŸª´ Garden Root</AccentA>
              </span>
            )
          }
        </div>
        {
          entry.data.published && (
            <span>
              Published on <Pill key="published" value={entry.data.published} />
            </span>
          )
        }
      </div>
    </NoteHeader>
  </slot>
  <Content />
  <slot slot="sidebar" name="sidebar" />
</NoteLayout>

<style>
  .metadata {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    gap: var(--space-xs);
  }
  .parents {
    display: flex;
    gap: var(--space-m);
  }
  span {
    display: flex;
    gap: var(--space-xs);
    color: var(--text-faded);
  }
</style>
