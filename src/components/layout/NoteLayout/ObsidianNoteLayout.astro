---
import { render } from "astro:content";
import type { SuperNote } from "lib/utils/types";
import Alert from "~/components/block/Alert.astro";
import Duration from "~/components/block/Duration.astro";
import FurtherResources from "~/components/block/FurtherResources.astro";
import Pill from "~/components/block/note/Pill.astro";
import { metaMinDays } from "~/utils/note-meta";
import { formatNoteRelations } from "~/utils/note-relations";
import { isWithinDuration } from "~/utils/time";
import Metadata from "./components/metadata/AsideMetadata.astro";
import MetadataValueItem from "./components/metadata/MetadataValueItem.astro";
import MetadataContainer from "./components/MetadataContainer.astro";
import NoteHeader from "./components/NoteHeader.astro";
import NoteRelationsSection from "./components/NoteRelationsSection.astro";
import Toc from "./components/toc/Toc.astro";
import NoteLayout from "./NoteLayout.astro";
import { getWordCountPill } from "~/utils/pill-variants";

interface Props {
  entry: SuperNote;
}

const { entry } = Astro.props;

const { Content, headings } = await render(entry);
const metadata = entry.data;

// title
const title = `${metadata.emojip ? metadata.emojip + " " : ""} ${entry.name}`;

// description
const { description } = metadata;

const formattedRelations = await formatNoteRelations(metadata);

const pagefindWeight = !!metadata.emojip ? 10 : 8;
---

<NoteLayout
  title={entry.name}
  description={description}
  noBottomPadding={!!formattedRelations}
>
  <slot slot="header">
    <NoteHeader
      title={title}
      description={description}
      pagefindWeight={pagefindWeight}
    >
      <div class="content text-faded flow-lg">
        {
          (!!metadata.up?.length || !!metadata.prev || !!metadata.next) && (
            <div class="flow-xs">
              {!!metadata.up && (
                <MetadataContainer
                  references={metadata.up}
                  prefix="↑"
                  ariaLabel="Parent notes"
                />
              )}
              {!!metadata.prev && (
                <MetadataContainer
                  references={[metadata.prev]}
                  prefix="←"
                  ariaLabel="Previous notes in order"
                />
              )}
              {!!metadata.next && (
                <MetadataContainer
                  references={[metadata.next]}
                  prefix="→"
                  ariaLabel="Next notes in order"
                />
              )}
            </div>
          )
        }
        <hr />
        <div class="epistemic | flow-xs">
          <div class="time | flex-row wrap">
            {
              metadata.published && (
                <>
                  <div class="flex-row f-gap-2xs ws-nowrap">
                    {isWithinDuration(
                      metadata.published,
                      metaMinDays.newPublished
                    ) && (
                      <>
                        <Pill variant="new" /> —
                      </>
                    )}
                    <span>
                      <div class="sr-only">published on </div>
                      <MetadataValueItem value={metadata.published} />
                    </span>
                  </div>
                  <span aria-hidden>{" • "}</span>
                </>
              )
            }
            {
              metadata.modified && (
                <div class="flex-row f-gap-2xs ws-nowrap">
                  {isWithinDuration(
                    metadata.modified,
                    metaMinDays.freshModified
                  ) && (
                    <>
                      <Pill variant="fresh" /> —
                    </>
                  )}
                  <span class="modified">
                    last modified
                    <Duration date={metadata.modified} variant="long" /> ago
                  </span>
                </div>
              )
            }
          </div>
          {
            metadata.words > 15 && (
              <div class="flex-row f-gap-2xs">
                <Pill {...getWordCountPill(metadata.words)} />
                <span>
                  — {metadata.words}
                  {" words"}
                </span>
              </div>
            )
          }
        </div>
      </div>
      {metadata.fyi && <Alert variant="fyi" content={metadata.fyi} />}
      {metadata.status && <Alert variant={metadata.status} />}
    </NoteHeader>
  </slot>
  <Content />
  {metadata.resources && <FurtherResources resources={metadata.resources} />}
  {
    formattedRelations && (
      <>
        <div class="relations-cont | full region">
          <NoteRelationsSection formattedRelations={formattedRelations} />
        </div>
        <div class="footer-block | full" aria-hidden />
      </>
    )
  }

  <Fragment slot="sheetBody">
    <h3>{title}</h3>
    <Metadata metadata={metadata} />
    <slot name="sidebar" />
    <Toc headings={headings} />
  </Fragment>
</NoteLayout>

<style>
  h3 {
    font-family: var(--font-heading-sans);
  }

  .relations-cont {
    --flow-space: var(--space-3xl);
    background-color: var(--bg2);
    @media (width >= 800px) {
      grid-column: wide;
      border-radius: var(--radius-2);
      border-width: 1px;
    }
  }
  .footer-block {
    --flow-space: 0;
    z-index: -1;
    margin-top: calc(10rem * -1);
    height: 10rem;
    background-color: var(--bg2);
    @media (width < 800px) {
      display: none;
    }
  }

  .modified {
    font-style: italic;
  }
  .time {
    row-gap: var(--size-ch-2);
  }
  .epistemic {
    font-size: var(--step--1);
  }
  /* hr + :global(*) {
    --flow-space: var(--space-s);
  } */
</style>
˝
