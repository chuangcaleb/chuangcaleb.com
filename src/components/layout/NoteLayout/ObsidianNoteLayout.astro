---
import { render } from "astro:content";
import type { SuperNote } from "lib/utils/types";
import FurtherResources from "~/components/block/FurtherResources.astro";
import AccentA from "~/components/styled/monom/AccentA.astro";
import { getNoteEntries } from "~/utils/note";
import { formatNoteRelations } from "~/utils/note-relations";
import Metadata from "./components/metadata/AsideMetadata.astro";
import MetadataValueItem from "./components/metadata/MetadataValueItem.astro";
import MetadataContainer from "./components/MetadataContainer.astro";
import NoteHeader from "./components/NoteHeader.astro";
import NoteRelationsSection from "./components/NoteRelationsSection.astro";
import Toc from "./components/toc/Toc.astro";
import NoteLayout from "./NoteLayout.astro";

interface Props {
  entry: SuperNote;
}

const { entry } = Astro.props;

const { Content, headings } = await render(entry);
const metadata = entry.data;

// title
const title = `${metadata.emojip ? metadata.emojip + " " : ""} ${entry.name}`;

// parents
const parents = [...(metadata.up ?? [])];
const parentNotes = await getNoteEntries(parents);
// description
const { description } = metadata;

const formattedRelations = await formatNoteRelations(metadata);

const pagefindWeight = !!metadata.emojip ? 10 : 8;
---

<NoteLayout
  title={entry.name}
  description={description}
  noBottomPadding={!!formattedRelations}
>
  <slot slot="header">
    <NoteHeader
      title={title}
      description={description}
      pagefindWeight={pagefindWeight}
    >
      <div class="metadata-header | content">
        <div class="parents">
          {
            !!parentNotes.length ? (
              <MetadataContainer prefix="â†‘">
                {parentNotes.map((c, index) => (
                  <>
                    {index > 0 && "â€¢"}
                    <AccentA href={c.route}>
                      {`${c.data.emojip} ${c.name}`}
                    </AccentA>
                  </>
                ))}
              </MetadataContainer>
            ) : (
              <MetadataContainer prefix="â†‘">
                <AccentA href="/garden">ðŸŒ² Garden Root</AccentA>
              </MetadataContainer>
            )
          }
        </div>
        {
          metadata.published && (
            <span class="text-faded">
              Published on <MetadataValueItem value={metadata.published} />
            </span>
          )
        }
      </div>
    </NoteHeader>
  </slot>
  <Content />
  {metadata.resources && <FurtherResources resources={metadata.resources} />}
  {
    formattedRelations && (
      <>
        <div class="relations-cont | full region">
          <NoteRelationsSection formattedRelations={formattedRelations} />
        </div>
        <div class="footer-block | full" aria-hidden />
      </>
    )
  }

  <Fragment slot="sheetBody">
    <h3>{title}</h3>
    <Metadata metadata={metadata} />
    <slot name="sidebar" />
    <Toc headings={headings} />
  </Fragment>
</NoteLayout>

<style>
  .metadata-header {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    gap: var(--space-xs);
  }

  .parents {
    display: flex;
    gap: var(--space-m);
  }

  .relations-cont {
    --flow-space: var(--space-3xl);
    background-color: var(--bg2);
    @media (width >= 800px) {
      grid-column: wide;
      border-radius: var(--radius-2);
      border-width: 1px;
    }
  }
  .footer-block {
    --flow-space: 0;
    z-index: -1;
    margin-top: calc(10rem * -1);
    height: 10rem;
    background-color: var(--bg2);
    @media (width < 800px) {
      display: none;
    }
  }
</style>
