---
import { render } from "astro:content";
import type { SuperNotes } from "lib/utils/types";
import FurtherResources from "~/components/block/FurtherResources.astro";
import Pill from "~/components/block/Pill.astro";
import NoteList from "~/components/layout/NoteList.astro";
import AccentA from "~/components/styled/monom/AccentA.astro";
import { getNoteEntries } from "~/utils/note";
import Metadata from "./components/metadata/Metadata.astro";
import MetadataContainer from "./components/MetadataContainer.astro";
import NoteHeader from "./components/NoteHeader.astro";
import Toc from "./components/toc/Toc.astro";
import NoteLayout from "./NoteLayout.astro";

interface Props {
  entry: SuperNotes[number];
}

const { entry } = Astro.props;

const { Content, headings } = await render(entry);

// title
const cs = await getNoteEntries(entry.data.collection);
const title = `${entry.data.emojip ? entry.data.emojip + " " : ""} ${entry.name}`;

// collection
const { collectionItems, series, description } = entry.data;
const isCollection = !!collectionItems?.length;
const collectionData = isCollection && {
  isOrdered: !!series,
  items: series ?? collectionItems,
};
---

<NoteLayout title={entry.name} description={description}>
  <slot slot="header">
    <NoteHeader title={title} description={entry.data.description}>
      <div class="metadata | content">
        <div class="parents">
          {
            !!cs.length ? (
              <MetadataContainer prefix="â†‘">
                {cs.map((c, index) => (
                  <>
                    {index > 0 && "â€¢"}
                    <AccentA href={c.route}>
                      {`${c.data.emojip} ${c.name}`}
                    </AccentA>
                  </>
                ))}
              </MetadataContainer>
            ) : (
              <MetadataContainer prefix="â†‘">
                <AccentA href="/garden">ðŸª´ Garden Root</AccentA>
              </MetadataContainer>
            )
          }
        </div>
        {
          entry.data.published && (
            <span>
              Published on <Pill key="published" value={entry.data.published} />
            </span>
          )
        }
      </div>
    </NoteHeader>
  </slot>
  <Content />
  {
    entry.data.resources && (
      <FurtherResources resources={entry.data.resources} />
    )
  }
  {
    collectionData && (
      <Fragment>
        <hr />
        <NoteList class="popout" {...collectionData} />
      </Fragment>
    )
  }
  <Fragment slot="sheetBody">
    <h3>{title}</h3>
    <Metadata metadata={entry.data} />
    <slot name="sidebar" />
    <Toc headings={headings} />
  </Fragment>
</NoteLayout>

<style>
  .metadata {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    gap: var(--space-xs);
  }
  .parents {
    display: flex;
    gap: var(--space-m);
  }
  span {
    color: var(--text-faded);
  }
</style>
