---
import { getCollection } from "astro:content";
import BaseMain from "~/components/layout/BaseMain.astro";
import AccentA from "~/components/styled/monom/AccentA.astro";
import NoteCard from "~/components/styled/monom/NoteCard.astro";
import TagWIcon from "~/components/styled/polym/TagWIcon.astro";
import { NAV_LINKS } from "~/data/links";
import { getNoteName, gnr } from "~/utils/post";
import { Content as GardenIntroContent } from "./_garden-intro.mdx";

const publicNotes = await getCollection("obsidian-note");

const collectionNotes = publicNotes
  .filter((n) => n.data.tags?.includes("üìÇ/collection"))
  .sort((a, b) =>
    (a.data?.collectionItems?.length ?? 0) <
    (b.data?.collectionItems?.length ?? 0)
      ? 1
      : -1
  );
const leafNotes = publicNotes
  .filter((n) => !n.data.tags?.includes("üìÇ/collection"))
  .sort((a, b) => (a.body.length < b.body.length ? 1 : -1));

const icon = NAV_LINKS.GARDEN.icon;
---

<BaseMain title="Digital Garden">
  <article class="linew-wide prose flow-lg">
    <TagWIcon iconName={icon} as="h1">Caleb's Digital Garden</TagWIcon>
    <div class="flow garden-intro">
      <GardenIntroContent />
    </div>
    <h2>üìÇ Collection notes</h2>
    <ul class="collections">
      {
        collectionNotes?.map((n) => (
          <li>
            <NoteCard as="a" class="note-card" href={gnr(n.slug)}>
              <div class="emoji">{n.data.emojip ?? "‚Äé‚Äé"}</div>
              <h3>
                {getNoteName(n.id)}{" "}
                <span>({n.data.collectionItems?.length})</span>
              </h3>
            </NoteCard>
          </li>
        ))
      }
    </ul>
    <h2>üçÉ Leaf notes</h2>
    <ul>
      {
        leafNotes?.map((n) => (
          <li>
            <AccentA href={gnr(n.slug)}>{getNoteName(n.id)}</AccentA>
            {`(${n.body.length} chars)`}
          </li>
        ))
      }
    </ul>
  </article>
</BaseMain>

<style>
  .garden-intro {
    max-width: var(--content-w);
  }
  .collections {
    /* grid-column-end: max-end; */
    display: grid;
    place-content: stretch;
    gap: var(--space-2xs);
    grid-template-columns: repeat(auto-fit, minmax(min(100%, 25ch), 1fr));
    li {
      margin-block-start: 0;
    }
    .note-card {
      display: flex;
      flex-direction: column;
      align-items: start;
      height: 100%;
      --color-underline: transparent;
      .emoji {
        font-size: var(--step-2);
      }
      h3 {
        font-size: var(--step-1);
        text-wrap: balance;
        /* margin-top: auto; */
      }
    }
  }
</style>
