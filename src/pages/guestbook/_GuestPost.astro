---
import { parse } from "date-fns";
import type { GuestPost } from "lib/google/sheets/types";
import ProseA from "~/components/styled/monom/ProseA.astro";
import { formatIso } from "~/utils/time";

interface Props {
  post: GuestPost;
}

const { post } = Astro.props;

const hasLink = !!post["🔗 Social Link"];

const formattedDate = formatIso(
  parse(post.Timestamp, "dd/MM/yyyy HH:mm:ss", new Date()).toISOString(),
  "MMMM yyyy"
);
---

<blockquote class="flom-lg surface-alt border flow">
  <div class="cite | flex-row">
    {
      post["📸 Avatar Image Link"] && (
        <img
          src={post["📸 Avatar Image Link"]}
          alt={`Avatar image of ${post["📇 Display Name"]}`}
          height={40}
          width={40}
          fetchpriority="low"
          loading="lazy"
        />
      )
    }
    <p>
      {
        hasLink ? (
          <ProseA href={post["🔗 Social Link"]}>
            {post["📇 Display Name"]}
          </ProseA>
        ) : (
          <span>{post["📇 Display Name"]}</span>
        )
      }
      <span class="flex-row subtitle">
        <span>{post["👥 Relation to me"]}</span>
        {post["🏷️ Tag"] !== "Other" && <i class="tag">#{post["🏷️ Tag"]}</i>}
      </span>
    </p>
  </div>
  <p class="body">
    {post["📃 Content Body"]}
    <i>
      {formattedDate}
    </i>
  </p>

  <style>
    blockquote *:not(.body) {
      font-size: var(--step--1);
    }
    img {
      /* height: 3em; */
      /* aspect-ratio: 1/1; */
      border-radius: 100%;
    }
    .cite p > span {
      line-height: var(--font-lh-1);
    }
    i,
    .subtitle {
      color: var(--fg3);
      white-space: nowrap;
    }
    .subtitle {
      text-transform: lowercase;
    }
    p {
      word-wrap: initial;
    }
  </style>
</blockquote>
