---
import { parse } from "date-fns";
import type { GuestPost } from "lib/google/sheets/types";
import { formatIso } from "~/utils/time";

interface Props {
  post: GuestPost;
}

const { post } = Astro.props;

const hasLink = !!post["🔗 Social Link"];

const formattedDate = formatIso(
  parse(post.Timestamp, "dd/MM/yyyy HH:mm:ss", new Date()).toISOString(),
  "MMMM yyyy"
);
---

<div class="post | flom-lg surface-alt border flow">
  <div class="cite | flex-row">
    {
      post["📸 Avatar Image Link"] && (
        <img
          src={post["📸 Avatar Image Link"]}
          alt={`Avatar image of ${post["📇 Display Name"]}`}
          height={40}
          width={40}
          fetchpriority="low"
          loading="lazy"
        />
      )
    }
    <p>
      {
        hasLink ? (
          <a href={post["🔗 Social Link"]}>{post["📇 Display Name"]}</a>
        ) : (
          <span class="display-name">{post["📇 Display Name"]}</span>
        )
      }
      <span class="flex-row wrap subtitle">
        <span>{post["👥 Relation to me"]}</span>
        {post["🏷️ Tag"] !== "Other" && <i class="tag">#{post["🏷️ Tag"]}</i>}
      </span>
    </p>
  </div>
  <p class="body">
    {post["📃 Content Body"]}
    <i>
      {formattedDate}
    </i>
  </p>
</div>

<style>
  .post {
    padding-block: var(--step-2);
    padding-inline: var(--step-1);
    padding-inline-start: var(--step-2);
  }

  .subtitle {
    font-size: var(--step--1);
    text-transform: lowercase;
  }
  img {
    /* height: 3em; */
    /* aspect-ratio: 1/1; */
    border-radius: 100%;
  }
  .cite p > span {
    line-height: var(--font-lh-1);
  }
  i,
  .subtitle {
    color: var(--fg3);
    white-space: nowrap;
  }
  .body i {
    padding-inline-start: var(--step--1);
  }

  p {
    word-wrap: initial;
  }
</style>
