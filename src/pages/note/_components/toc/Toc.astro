---
import TocHeading from "./TocHeading.astro";
import generateToc from "lib/markdown/toc";

const { headings } = Astro.props;

const toc = generateToc(headings);

// Boot out H1; but we've already stripped it in lib/remark/strip-h1.mjs
// keeping this here in case
// const tocHeadings = (function () {
//   if (headings[0].depth === 1) {
//     headings.shift();
//   }
//   return headings;
// })();
---

{
  !!toc.length && (
    <nav id="toc" class="no-scrollbar">
      <h4>Outline</h4>
      <ul class="toc-root">
        {toc.map((h) => (
          <TocHeading tocItem={h} />
        ))}
      </ul>
    </nav>
  )
}

<script>
  const setCurrentHeading: IntersectionObserverCallback = (entries) => {
    // loop to each entries (headings) in the page
    for (let entry of entries) {
      // equivalent to the slug returned from pageHeadings
      const { id } = entry.target;
      // get the TOC link's element for the current entry
      const tocLinkEl = document.querySelector(`#toc a[href='#${id}']`);
      if (!tocLinkEl) return;

      // check if the entry is intersecting
      if (entry.isIntersecting) {
        // remove active class from all links
        document
          .querySelectorAll("#toc a")
          .forEach((e) => e.classList.remove("active"));
        // add active class to the currently active entry
        tocLinkEl.classList.add("active");
      }
    }
  };
  const observerOptions = {
    threshold: 1,
    rootMargin: "0px 0px -66%",
  };
  const observer = new IntersectionObserver(setCurrentHeading, observerOptions);
  // select all headings to observe
  const elToObserve = document.querySelectorAll("article :is(h2,h3,h4)");
  // finally, observe the elements
  elToObserve.forEach((el) => observer.observe(el));
</script>

<style>
  nav {
    position: sticky;
    align-self: flex-start;
    height: min(100%, 100vh);
    top: var(--space-2xs);
    width: 100%;
    display: flex;
    flex-direction: column;
    row-gap: var(--space-xs);
    overflow-x: hidden;
    padding-block-end: var(--space-l);
    max-width: 35ch;
  }
  nav h4 {
    display: block;
    /* color: var(--text-faded); */
    font-size: var(--step-1);
  }
</style>
