---
import { getCollection } from "astro:content";
import WIPDisclaimer from "~/components/block/WIPDisclaimer.astro";
import Base from "~/components/layout/Base.astro";
import Main from "~/components/layout/Main.astro";
import CollectionList from "./_components/CollectionList.astro";
import Metadata from "./_components/metadata/Metadata.astro";
import Toc from "./_components/toc/Toc.astro";
import { getNoteName } from "~/utils/post";

export async function getStaticPaths() {
  const notes = await getCollection("obsidian-note");
  return notes.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { data } = entry;

const { Content, headings } = await entry.render();

const noteName = getNoteName(entry.id);
const title = data.title ?? noteName;
---

<Base title={title}>
  <Main>
    <WIPDisclaimer />
    <div class="note-body">
      <aside class="toc-aside flow">
        <Metadata metadata={data} />
        {data && !!headings.length && <hr />}
        <Toc headings={headings} />
      </aside>
      <article class="full cgrid prose flow-lg region">
        <Content />
        <CollectionList note={entry} />
      </article>
    </div>
  </Main>
</Base>

<style>
  /* Remove h1 */
  .prose :global(.toc-aside + h1) {
    --flow-space: 0;
  }

  .note-body {
    display: grid;
    grid-template-columns: 1fr 30vw;
  }

  aside {
    width: 100%;
    justify-self: end;
    padding-inline: var(--space-m);
    padding-bottom: var(--space-2xs);
    padding-block-start: var(--space-m);
    --hr-space: var(--size-relative-8);
  }
  article.cgrid {
    grid-row-start: 1;
    grid-column: 1;
  }

  @media (width < 900px) {
    .note-body {
      grid-template-columns: 1fr;
    }
    aside {
      display: none;
    }
  }
  article.prose {
    padding-block-start: var(--space-m);

    @media (width >= 1000px), (680px <= width <= 900px) {
      h1,
      h2,
      h3,
      h4,
      h5 {
        display: list-item;
      }

      h1::marker,
      h2::marker,
      h3::marker,
      h4::marker,
      h5::marker {
        color: var(--text-muted);
        font-size: 0.8em;
        font-weight: initial;
      }
      h1::marker {
        content: "H1  ";
      }
      h2::marker {
        content: "H2  ";
      }
      h3::marker {
        content: "H3  ";
      }
      h4::marker {
        content: "H4  ";
      }
    }
  }
</style>
