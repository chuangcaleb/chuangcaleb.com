---
import { Icon } from "astro-iconify";
import type { CollectionEntry } from "astro:content";
import { getCldImgData } from "lib/cloudinary/get";
import Caps from "~/components/styled/polym/Caps.astro";
import CldImg from "~/components/block/CldImg.astro";
import AccentA from "~/components/styled/monom/AccentA.astro";

interface Props {
  project: CollectionEntry<"project">;
}

const { project } = Astro.props;

const { Content } = await project.render();

const i = getCldImgData("projects/" + project.slug, true);
---

<article class="project">
  <div class="project-body | flow">
    <header>
      <h3>{project.data.title}</h3>
      <Caps>{project.data.kind}</Caps>
    </header>
    <Content  />
    <div class="links">
      <Icon name="lucide:link" />
      {
        project.data.links?.map((link) => (
          <AccentA href={link.href}>
            <Icon name={link.icon} />{}{link.label}
          </AccentA>
        ))
      }
    </div>
  </div>
  {
    i ? (
      <CldImg resource={i} hasBorder sizes="(max-width: 706px) 91vw, 42vw" />
    ) : (
      <div />
    )
  }
</article>

<style>
  .project {
    display: grid;
    align-items: center;
    grid-template-columns: repeat(auto-fit, minmax(calc((var(--size-content-3)/2) + var(--space-m)), 1fr));
    column-gap: var(--space-m);
    row-gap: var(--space-m);

    img {
      max-width: max(25rem, min(45vw, 50rem));
      @media (width < 720px) {
        max-width: 100%;
      }
    }
  }

  .project-body {
    max-width: var(--size-content-3);
  }


  .links {
    display: flex;
    flex-wrap: wrap;
    column-gap: var(--size-relative-6);

    & > svg:first-child {
    color: var(--text-faded);
  }
  }

  header {
    display: grid;
    :not(h3) {
      font-size: var(--step-0);
      order: -1;
    }
  }
</style>
