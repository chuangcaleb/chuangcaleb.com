---
import { Image } from "@unpic/astro";
import { Icon } from "astro-iconify";
import { render, type CollectionEntry } from "astro:content";
import { getCldImgData } from "lib/cloudinary/get";
import { defaultComponents } from "lib/utils/markdown";
import AccentA from "~/components/styled/monom/AccentA.astro";
import ProseA from "~/components/styled/monom/ProseA.astro";
import Caps from "~/components/styled/polym/Caps.astro";

interface Props {
  project: CollectionEntry<"project">;
}

const { project } = Astro.props;

const { Content } = await render(project)


const i = getCldImgData("projects/" + project.id, true);
---

<article class="project">
  <div class="project-body | flow">
    <header>
      <h3>{project.data.title}</h3>
      <Caps>{project.data.kind}</Caps>
    </header>
    <Content components={defaultComponents} />
    <div class="links">
      <Icon name="lucide:link" />
      {
        project.data.links?.map((link) => (
          <AccentA href={link.href}>
            <Icon name={link.icon} />{}<span class="a-text">{link.label}</span>
          </AccentA>
        ))
      }
    </div>
  </div>
  {
    i ? (
      <Image
        src={i.secure_url}
        alt={`Display image showcasing my ${project.data.kind} project for ${project.data.title}`}
        height={450}
        // width={700}
        // aspectRatio={1.6}
        class="border"
        layout="constrained"
        />
    ) : (
      <div />
    )
  }
</article>

<style>
  .project {
    grid-column: 1/-1;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(calc((var(--size-content-3)/2) + var(--space-m)), 1fr));
    align-items: center;
    gap: var(--space-m);
  }

  .project-body {
    max-width: var(--size-content-3);
  }


  .links {
    display: flex;
    flex-wrap: wrap;
    column-gap: var(--size-relative-6);

    & > svg:first-child {
    color: var(--text-faded);
  }
  }

  header {
    display: grid;
    :not(h3) {
      font-size: var(--step-0);
      order: -1;
    }
  }
</style>
