---
import { Picture } from "astro:assets";
import { render, type CollectionEntry } from "astro:content";
import Caps from "~/components/styled/polym/Caps.astro";
import TagWIcon from "~/components/styled/polym/TagWIcon.astro";

interface Props {
  project: CollectionEntry<"project">;
}

const { project } = Astro.props;

const { Content } = await render(project);
---

<article class="project">
  <div class="project-body | flow prose">
    <header>
      <h3>{project.data.title}</h3>
      <Caps>{project.data.kind}</Caps>
    </header>
    <Content />

    <ul class="links">
      {
        project.data.links?.map((link) => (
          <li>
            <TagWIcon as="a" href={link.href} iconName={link.icon}>
              {link.label}
            </TagWIcon>
          </li>
        ))
      }
    </ul>
  </div>
  {
    project.data.image ? (
      <Picture
        src={project.data.image}
        alt={`Display image showcasing my ${project.data.kind} project for ${project.data.title}`}
        height={450}
        sizes={`(max-width: 637px) 93vw, 623px`}
        widths={[343, 480, 560, 623]}
        class="border"
        formats={["avif", "webp"]}
      />
    ) : (
      <div />
    )
  }
</article>

<style>
  .project {
    grid-column: 1/-1;
    display: grid;
    grid-template-columns: repeat(
      auto-fit,
      minmax(calc((var(--size-content-3) / 2) + var(--space-xl)), 1fr)
    );
    align-items: center;
    gap: var(--space-xl);
  }

  .project-body {
    max-width: var(--size-content-3);
    :global(p) {
      --color-link: var(--text-normal);
    }
  }

  .links {
    display: flex;
    flex-wrap: wrap;
    column-gap: var(--size-ch-6);
  }

  header {
    display: grid;
    :not(h3) {
      font-size: var(--step-0);
      order: -1;
    }
  }
</style>
